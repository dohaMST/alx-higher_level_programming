===========================
3-say_my_name.py
===========================

defining a function <say_my_name(first_name, last_name="")>

=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Doha", "Mastour")
    My name is Doha Mastour

::

    >>> say_my_name("rafi9", "bobker")
    My name is Rafi9 bobker

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Doha")
    My name is Doha 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(5, "Doha")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Doha", ["mst", "tms", "tsm"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Doha": 5, "Mastour": 21}, 9.4)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
